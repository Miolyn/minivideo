<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tju.minivideo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.tju.minivideo.entity.User">
    <!--@mbg.generated-->
    <!--@Table minivideo.users-->
    <id column="user_id" property="userId" />
    <result column="avatar" property="avatar" />
    <result column="username" property="username" />
    <result column="password" property="password" />
    <result column="introduction" property="introduction" />
    <result column="signature" property="signature" />
    <result column="status" property="status" />
    <result column="follow_num" property="followNum" />
    <result column="sex" property="sex" />
    <result column="fans_num" property="fansNum" />
    <result column="is_deleted" property="isDeleted" />
    <result column="created_at" property="createdAt" />
    <result column="updated_at" property="updatedAt" />
    <result column="like_num" property="likeNum" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, avatar, username, `password`, introduction, signature, `status`, follow_num, 
    sex, fans_num, is_deleted, created_at, updated_at, like_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from minivideo.users
    where user_id = #{userId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from minivideo.users
    where user_id = #{userId}
  </delete>
  <insert id="insert" parameterType="cn.tju.minivideo.entity.User">
    <!--@mbg.generated-->
    insert into minivideo.users (user_id, avatar, username, `password`, introduction, signature, 
      `status`, follow_num, sex, fans_num, is_deleted, created_at, updated_at, 
      like_num)
    values (#{userId}, #{avatar}, #{username}, #{password}, #{introduction}, #{signature}, 
      #{status}, #{followNum}, #{sex}, #{fansNum}, #{isDeleted}, #{createdAt}, #{updatedAt}, 
      #{likeNum})
  </insert>
  <insert id="insertSelective" parameterType="cn.tju.minivideo.entity.User">
    <!--@mbg.generated-->
    insert into minivideo.users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="followNum != null">
        follow_num,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="fansNum != null">
        fans_num,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId},
      </if>
      <if test="avatar != null">
        #{avatar},
      </if>
      <if test="username != null">
        #{username},
      </if>
      <if test="password != null">
        #{password},
      </if>
      <if test="introduction != null">
        #{introduction},
      </if>
      <if test="signature != null">
        #{signature},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="followNum != null">
        #{followNum},
      </if>
      <if test="sex != null">
        #{sex},
      </if>
      <if test="fansNum != null">
        #{fansNum},
      </if>
      <if test="isDeleted != null">
        #{isDeleted},
      </if>
      <if test="createdAt != null">
        #{createdAt},
      </if>
      <if test="updatedAt != null">
        #{updatedAt},
      </if>
      <if test="likeNum != null">
        #{likeNum},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tju.minivideo.entity.User">
    <!--@mbg.generated-->
    update minivideo.users
    <set>
      <if test="avatar != null">
        avatar = #{avatar},
      </if>
      <if test="username != null">
        username = #{username},
      </if>
      <if test="password != null">
        `password` = #{password},
      </if>
      <if test="introduction != null">
        introduction = #{introduction},
      </if>
      <if test="signature != null">
        signature = #{signature},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="followNum != null">
        follow_num = #{followNum},
      </if>
      <if test="sex != null">
        sex = #{sex},
      </if>
      <if test="fansNum != null">
        fans_num = #{fansNum},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum},
      </if>
    </set>
    where user_id = #{userId}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tju.minivideo.entity.User">
    <!--@mbg.generated-->
    update minivideo.users
    set avatar = #{avatar},
      username = #{username},
      `password` = #{password},
      introduction = #{introduction},
      signature = #{signature},
      `status` = #{status},
      follow_num = #{followNum},
      sex = #{sex},
      fans_num = #{fansNum},
      is_deleted = #{isDeleted},
      created_at = #{createdAt},
      updated_at = #{updatedAt},
      like_num = #{likeNum}
    where user_id = #{userId}
  </update>
<!--auto generated by MybatisCodeHelper on 2021-08-25-->
  <select id="findByUsername" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from minivideo.users
    where username=#{username}
  </select>
<!--auto generated by MybatisCodeHelper on 2021-08-26-->
  <select id="findByUsernameAndPassword" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from minivideo.users
    where username=#{username} and `password`=#{password}
  </select>
<!--auto generated by MybatisCodeHelper on 2021-09-08-->
  <select id="findByUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from minivideo.users
    where user_id=#{userId} and is_deleted=0
  </select>
  <select id="findByUserIdForUpdate" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from minivideo.users
    where user_id=#{userId} and is_deleted=0
    for update
  </select>
<!--auto generated by MybatisCodeHelper on 2021-09-10-->
  <update id="updateLikeNumByUserId">
    update minivideo.users
    set like_num=like_num+1
    where user_id=#{userId} and is_deleted=0
  </update>
<!--auto generated by MybatisCodeHelper on 2021-09-15-->
  <select id="searchKeyOnUsernameOrderByCreatedAt" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from minivideo.users
    where username like concat(concat('%', #{key}), '%') and is_deleted=0 order by created_at desc
  </select>
</mapper>